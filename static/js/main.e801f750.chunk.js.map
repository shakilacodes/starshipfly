{"version":3,"sources":["components/swapi.js","components/Ship-Detail.js","components/Starship-List.js","components/Home.js","components/Star-Nav.js","components/Film.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","axios","create","baseURL","ShipDetail","props","useState","shipDetail","setShipDetail","shipName","match","params","useEffect","get","then","res","data","results","name","console","log","Container","map","ship","ListGroup","className","key","Item","model","manufacturer","starship_class","cost_in_credits","length","crew","passengers","max_atmosphering_speed","hyperdrive_rating","MGLT","cargo_capacity","consumables","films","pilots","StarshipList","Table","responsive","scope","to","Home","state","href","class","role","Component","StarNav","Navbar","id","Brand","Toggle","aria-controls","Collapse","Nav","getFilmInfo","App","starships","setStarships","loading","setLoading","a","fetch","json","getStarships","basename","Dimmer","active","inverted","Loader","exact","path","render","component","Film","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e801f750.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: `https://swapi.co/api/starships`\n});\n\nexport const API_URL = \"https://swapi.co/api/starships\";\nexport const SEARCH_URL = \"https://swapi.co/api/starships/?search=\";\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction ShipDetail(props) {\n  const [shipDetail, setShipDetail] = useState([]);\n  let shipName = props.match.params.shipName;\n  useEffect(() => {\n    function getShipDetail() {\n      axios\n        .get(`https://swapi.co/api/starships/?search=` + shipName)\n        .then(res => {\n          let shipDetail = res.data;\n          setShipDetail(shipDetail.results);\n        });\n    }\n\n    getShipDetail();\n  }, []);\n\n  let name = shipDetail.name;\n\n  console.log(shipDetail);\n  console.log(props.match.params.shipName);\n\n  return (\n    <>\n      <Container>\n        {shipDetail.map(ship => {\n          return (\n            <>\n              <div>\n                <br></br>\n                <h1>{ship.name}</h1>\n                <br></br>\n              </div>\n              <ListGroup className=\"list-group\" key={ship.name}>\n                <ListGroup.Item className=\"h4 list-group-item-action  d-flex justify-content-between align-items-center\">\n                  Model\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.model}\n                  </span>\n                </ListGroup.Item>\n\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Manufacturer\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.manufacturer}\n                  </span>\n                </ListGroup.Item>\n\n                <ListGroup.Item className=\"h4  list-group-item-action d-flex justify-content-between align-items-center\">\n                  Class\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.starship_class}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Ship Cost (credits){\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.cost_in_credits}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Ship Length{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.length}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Crew Needed{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.crew}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Passenger Capacity{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.passengers}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Max Speed{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.max_atmosphering_speed}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Hyperdrive{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    Rating {ship.hyperdrive_rating}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Max Megalights per Hour{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.MGLT}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Cargo Capacity (kg){\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.cargo_capacity}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Consumable Capacity{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.consumables}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Films{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.films}\n                  </span>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"h4 list-group-item-action d-flex justify-content-between align-items-center\">\n                  Pilots{\" \"}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {ship.pilots}\n                  </span>\n                </ListGroup.Item>\n              </ListGroup>\n            </>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n\nexport default ShipDetail;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\n\nexport default function StarshipList({ data }) {\n  return (\n    <>\n      <div>\n        <br></br>\n        <h1>All the Starships</h1>\n        <br></br>\n      </div>\n      <Container>\n        {data.map(ship => {\n          return (\n            <Table className=\"table table-hover\" responsive=\"sm\">\n              <tbody>\n                <tr className=\"table-primary text-left\">\n                  <td\n                    className=\"font-weight-bold\"\n                    scope=\"col-4\"\n                    key={ship.name}\n                  >\n                    <Link to={`/ship-detail/${ship.name}`}>\n                      <h5>{ship.name}</h5>\n                    </Link>\n                  </td>\n                  <td scope=\"col-4\">{ship.model}</td>\n                  <td scope=\"col-4\">{ship.manufacturer}</td>\n                </tr>\n              </tbody>\n            </Table>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <br></br>\n        <h1 className=\"display-3\">A Starship</h1>\n        <p className=\"lead\">\n          also known as a starcraft or interstellar spacecraft, is a spacecraft\n          designed for traveling between planetary systems. Theoretically.\n        </p>\n        <footer className=\"blockquote-footer\">\n          {\" \"}\n          Erik Sofge,{\" \"}\n          <a className=\"breadcrumb-item\" href=\"#\">\n            Wikipedia\n          </a>\n        </footer>\n        <hr class=\"my-4\"></hr>\n        <p> Via the Star Wars API</p>\n        <p class=\"lead\">\n          <Link to=\"/starship-list\">\n            <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n              Learn more\n            </a>\n          </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function StarNav() {\n  return (\n    <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Container>\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n          <Navbar.Brand className=\"navbar-brand\" href=\"#home\"></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <Nav>\n                <li className=\"nav-item active\">\n                  <Link className=\"nav-link\" to=\"/\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/starship-list\">\n                    All the Starships\n                  </Link>\n                </li>\n              </Nav>\n            </ul>\n          </Navbar.Collapse>\n        </div>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { Component, useState, useEffect } from \"react\";\n\nexport default function getFilmInfo() {\n  //   const [filmDetail, setFilmDetail] = useState([]);\n\n  //   useEffect(() => {\n  //     function getFilmDetail() {\n  //       axios.get(`https://swapi.co/api/films/1/`).then(res => {\n  //         let filmDetail = res.data;\n  //         setFilmDetail(filmDetail.results);\n  //       });\n  //     }\n  //     getFilmDetail();\n  //   }, []);\n\n  //   let filmName = filmDetail.name;\n  return <div>Film Info</div>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { API_URL, SEARCH_URL } from \"./components/swapi\";\nimport { Container } from \"react-bootstrap\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport ShipDetail from \"./components/Ship-Detail\";\nimport StarshipList from \"./components/Starship-List\";\nimport Home from \"./components/Home\";\nimport StarNav from \"./components/Star-Nav\";\nimport Film from \"./components/Film\";\n\nfunction App() {\n  const [starships, setStarships] = useState([]);\n  const [ship, setShip] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getStarships() {\n      let res = await fetch(API_URL);\n      let data = await res.json();\n      setStarships(data.results);\n      setLoading(false);\n    }\n\n    async function getShip(name) {\n      let shipRes = await fetch(SEARCH_URL + name);\n      let shipData = await shipRes.json();\n      setShip(shipData.results);\n      setLoading(false);\n    }\n\n    getStarships();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/React\">\n        <StarNav />\n        <Container>\n          {loading ? (\n            <Dimmer active inverted>\n              <Loader inverted>Loading...</Loader>\n            </Dimmer>\n          ) : (\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/starship-list\">\n                <StarshipList data={starships} />\n              </Route>\n              <Route\n                exact\n                path=\"/ship-detail/:shipName\"\n                render={props => <ShipDetail {...props} />}\n              ></Route>\n              <Route path=\"/film\" component={Film}></Route>\n            </Switch>\n          )}\n        </Container>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootswatch/dist/lux/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}